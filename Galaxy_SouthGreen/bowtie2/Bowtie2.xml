<tool id="bowtie2" name="Bowtie2" version="2.0">
	<description>- Map reads against reference genome</description>
  	<!-- Wrapper compatible with Bowtie version 2.2.5 --> 

  	<command>
  	                source $__tool_directory__/module_bowtie2.sh;
  	                             
        ## prepare bowtie2 index
        #set index_path = ''
        #if str($reference_genome.source) == "history":
            bowtie2-build "$reference_genome.own_file" genome &amp;&amp;
            ln -s "$reference_genome.own_file" genome.fa &amp;&amp;
            #set index_path = 'genome'
        #else:
            #set index_path = $reference_genome.index.fields.path
        #end if
        
        ## execute bowtie2
        
        bowtie2
        
        ## number of threads
        -p \${GALAXY_SLOTS:-4}
		--quiet
        ## index file path
        -x $index_path
        -U "${fastq}"
        ## Analysis type
        #if ( str( $analysis_type.analysis_type_selector ) == "simple" and str( $analysis_type.presets ) != "no_presets" ):
            $analysis_type.presets
        #elif str( $analysis_type.analysis_type_selector ) == "full":
            #if str( $analysis_type.input_options.input_options_selector ) == "yes":
                --skip "${analysis_type.input_options.skip}"
                --qupto "${analysis_type.input_options.qupto}"
                --trim5 "${analysis_type.input_options.trim5}"
                --trim3 "${analysis_type.input_options.trim3}"
                ${analysis_type.input_options.qv_encoding}
                ${analysis_type.input_options.solexa-quals}
                ${analysis_type.input_options.int-quals}
            #end if
            
            #if str( $analysis_type.alignment_options.alignment_options_selector ) == "yes":
                -N "${$analysis_type.alignment_options.N}"
                -L "${$analysis_type.alignment_options.L}"
                -i "${$analysis_type.alignment_options.i}"
                --n_ceil "${$analysis_type.alignment_options.n_ceil}"
                --dpad "${$analysis_type.alignment_options.dpad}"
                --gbar "${$analysis_type.alignment_options.gbar}"
                ${analysis_type.alignment_options.ignore-quals}
                ${analysis_type.alignment_options.nofw}
                ${analysis_type.alignment_options.norc}
                ${analysis_type.alignment_options.no_1mm_upfront}
                #if str( $analysis_type.alignment_options.align_mode.align_mode_selector ) == "end-to-end":
                    --end-to-end
                    --score-min "${$analysis_type.alignment_options.align_mode.core-min}"
                #elif str( $analysis_type.alignment_options.align_mode.align_mode_selector ) == "local":
                    --local
                    --score-min "${$analysis_type.alignment_options.align_mode.core-min}"
                #end if
            #end if
            
            #if str( $analysis_type.scoring_options.scoring_options_selector ) == "yes":
                --ma "${analysis_type.scoring_options.ma}"
                --mp "${analysis_type.scoring_options.mp}"
                --np "${analysis_type.scoring_options.np}"
                --rdg "${analysis_type.scoring_options.rdg_read_open},${analysis_type.scoring_options.rdg_read_extend}"
                --rfg "${analysis_type.scoring_options.rfg_ref_open},${analysis_type.scoring_options.rfg_ref_extend}"
            #end if
            
            #if str( $analysis_type.reporting_options.reporting_options_selector ) == "k":
                -k "${analysis_type.reporting_options.k}"
            #elif str( $analysis_type.reporting_options.reporting_options_selector ) == "a":
                -a
            #end if
            
            #if str( $analysis_type.effort_options.effort_options_selector ) == "yes":
                -D "${analysis_type.effort_options.D}"
                -R "${analysis_type.effort_options.R}"
            #end if
            
            #if str( $analysis_type.sam_options.sam_options_selector ) == "yes":
                ${analysis_type.sam_options.no-unal}
                ${analysis_type.sam_options.omit-sec-seq}
            #end if
            
            #if str( $analysis_type.other_options.other_options_selector ) == "yes":
                ${analysis_type.other_options.reorder}
                ${analysis_type.other_options.non-deterministic}
                --seed "${analysis_type.other_options.seed}"
            #end if
        
        #elif str( $analysis_type.analysis_type_selector ) == "cline":
            ${analysis_type.cline}
        #end if    
         -S $output  
  	</command>

  	<inputs>
		<param name="fastq" type="data" format="fastqsanger" label="FASTQ file" />        
		<!-- reference genome -->
        <conditional name="reference_genome">
        	<param name="source" type="select" label="Will you select a reference genome from your history or use a built-in index?" help="Built-ins were indexed using default options. See `Indexes` section of help below">
            	<option value="indexed">Use a built-in genome index</option>
            	<option value="history">Use a genome from the history and build index</option>
          	</param>
          	<when value="indexed">
            	<param name="index" type="select" label="Select reference genome" help="If your genome of interest is not listed, contact the Galaxy team">
					<options from_file="gbs.loc">
						<column name="value" index="0"/>
						<column name="name" index="1"/>
						<column name="path" index="2"/>
					</options>
            	</param>
          	</when>
          	<when value="history">
            	<param name="own_file" type="data" format="fasta" metadata_name="dbkey" label="Select reference genome" />
          	</when>
        </conditional>		
		<conditional name="analysis_type">
            <param name="analysis_type_selector" type="select" label="Select analysis mode">
                <option value="simple">1: Default setting only</option>
                <option value="full">2: Full parameter list</option>
            </param>
            <when value="simple">
                <param name="presets" type="select" display="radio" label="Do you want to use presets?" help="Allow selecting among several preset parameter settings. Choosing between these will result in dramatic changes in runtime. See help below to understand effects of these presets.">
                    <option value="no_presets" selected="True">No, just use defaults</option>
                    <option value="--very-fast">Very fast end-to-end (--very-fast)</option>
                    <option value="--fast">Fast end-to-end (--fast)</option>
                    <option value="--sensitive">Sensitive end-to-end (--sensitive)</option>
                    <option value="--very-sensitive">Very sensitive end-to-end (--very-sensitive)</option>
                    <option value="--very-fast-local">Very fast local (--very-fast-local)</option>
                    <option value="--fast-local">Fast local (--fast-local)</option>
                    <option value="--sensitive-local">Sensitive local (--sensitive-local)</option>
                    <option value="--very-sensitive-local">Very sensitive local (--very-sensitive-local)</option>
                </param>
            </when>
            <when value="full">
                <conditional name="input_options">
                    <param name="input_options_selector" type="select" label="Do you want to tweak input options?" help="See &quot;Input Options&quot; section of Help below for information">
                        <option value="yes">Yes</option>
                        <option value="no" selected="true">No</option>
                    </param>
                    <when value="yes">
                        <param name="skip" type="integer" min="0" value="0" lable="Skip (i.e. do not align) the first that many reads or pairs in the input" help="-s/--skip; default=0"/>
                        <param name="qupto" type="integer" min="-1" value="-1" label="Align the first that many reads or read pairs from the input (after the -s/--skip reads or pairs have been skipped), then stop" help="-u/--qupto; default=-1 (no limit)"/>
                        <param name="trim5" type="integer" min="0" value="0" label="Trim that many bases from 5' (left) end of each read before alignment" help="-5/--trim5; default=0"/>
                        <param name="trim3" type="integer" min="0" value="0" label="Trim that many bases from 3' (right) end of each read before alignment" help="-3/--trim3; default=0"/>
                        <param name="qv_encoding" type="select" display="radio" label="Select quality score encoding" help="See help below for more details">
                            <option value="--phred33">Input qualities are ASCII chars equal to the Phred quality plus 33. This is also called the "Phred+33" encoding, which is used by the very latest Illumina pipelines (--phred33)</option>
                            <option value="--phred64" selected="True">Input qualities are ASCII chars equal to the Phred quality plus 64. This is also called the "Phred+64" encoding (--phred64)</option>
                        </param>
                        <param name="solexa-quals" type="boolean" truevalue="--solexa-quals" falsevalue="" checked="False" label="Convert input qualities from Solexa (which can be negative) to Phred (which can't). This scheme was used in older Illumina GA Pipeline versions (prior to 1.3)" help="--solexa-quals; default=False"/>
                        <param name="int-quals" type="boolean" truevalue="--int-quals" falsevalue="" checked="False" label="Quality values are represented in the read input file as space-separated ASCII integers, e.g., 40 40 30 40..., rather than ASCII characters, e.g., II?I.... Integers are treated as being on the Phred quality scale unless --solexa-quals is also specified" help="--int-quals; default=False"/>
                    </when>
                    <when value="no">
                        <!-- do nothing -->
                    </when>
                </conditional>
                <conditional name="alignment_options">
                    <param name="alignment_options_selector" type="select" label="Do you want to tweak alignment options?" help="See &quot;Alignment Options&quot; section of Help below for information">
                        <option value="yes">Yes</option>
                        <option value="no" selected="true">No</option>
                    </param>
                    <when value="yes">
                        <param name="N" type="integer" min="0" max="1" value="0" label="Set the number of mismatches to be allowed in a seed alignment during multiseed alignment (see `Multiseed alignment` section of help below)" help="-N; Can be set to 0 or 1. Setting this higher makes alignment slower (often much slower) but increases sensitivity; default=0"/>
                        <param name="L" type="integer" min="0" value="20" label="Sets the length of the seed substrings to align during multiseed alignment (see `Multiseed alignment` section of help below)" help="-L; Smaller values make alignment slower but more senstive. Default: the `--sensitive` preset is used by default, which sets `-L` to 20 both in `--end-to-end` mode and in `--local` mode"/>
                        <param name="i" type="text" value="S,1,1.15" size="10" label="Set a function governing the interval between seed substrings to use during multiseed alignment (see `Multiseed alignment` section of help below). Also see description of this option below in the help section" help="-i; Since it's best to use longer intervals for longer reads, this parameter sets the interval as a function of the read length, rather than a single one-size-fits-all number. For instance, specifying `-i S,1,2.5` sets the interval function `f` to `f(x) = 1 + 2.5 * sqrt(x)`, where x is the read length. See also `Setting function options` below in help section. If the function returns a result less than 1, it is rounded up to 1. Default: the `--sensitive` preset is used by default, which sets `-i` to `S,1,1.15` in `--end-to-end` mode to `-i S,1,0.75` in `--local` mode"/>
                        <param name="n_ceil" type="text" value="`L,0,0.15" label="Set a function governing the maximum number of ambiguous characters (usually `N`s and/or `.`s) allowed in a read as a function of read length" help="--n-ceil; For instance, specifying `-L,0,0.15` sets the N-ceiling function `f` to `f(x) = 0 + 0.15 * x`, where x is the read length.  See also: [setting function options]. Reads exceeding this ceiling are [filtered out]. Default=`L,0,0.15`"/>
                        <param name="dpad" type="integer" min="0" value="15" lable="Pad dynamic programming problems by that many columns on either side to allow gaps" help="--dpad; default=15"/>
                        <param name="gbar" type="integer" min="0" value="4" label="Disallow gaps within that many positions of the beginning or end of the read" help="--gbar; default=4"/>
                        <param name="ignore-quals" type="boolean" truevalue="--ignore-quals" falsevalue="" selected="False" label="When calculating a mismatch penalty, always consider the quality value at the mismatched position to be the highest possible, regardless of the actual value" help="--ignore-quals; input is treated as though all quality values are high; default=False"/>
                        <param name="nofw" type="boolean" truevalue="--nofw" falsevalue="" selected="False" label="Do not attempt to align unpaired reads to the forward (Watson) reference strand" help="In paired-end mode, `--nofw` and `--norc` pertain to the fragments; i.e. specifying `--nofw` causes `bowtie2` to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand. Default=False"/>
                        <param name="norc" type="boolean" truevalue="--norc" falsevalue="" selected="False" label="Do not attempt to align unpaired reads to the reverse (Crick) reference strand" help="In paired-end mode, `--nofw` and `--norc` pertain to the fragments; i.e. specifying `--nofw` causes `bowtie2` to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand. Default=False"/>
                        <param name="no_1mm_upfront" type="boolean" truevalue="--no-1mm-upfront" falsevalue="" selected="False" label="Prevent searching for 1-mismatch end-to-end alignments before using the multiseed heuristic (see `Multiseed alignment` section of help baelow)" help="--no-1mm-upfront; By default, Bowtie 2 will attempt to find either an exact or a 1-mismatch end-to-end alignment for the read *before* trying the [multiseed heuristic].  Such alignments can be found very quickly, and many short read alignments have exact or near-exact end-to-end alignments.  However, this can lead to unexpected alignments when the user also sets options governing the [multiseed heuristic], like `-L` and `-N`.  For instance, if the user specifies `-N 0` and `-L` equal to the length of the read, the user will be surprised to find 1-mismatch alignments reported.  This option prevents Bowtie 2 from searching for 1-mismatch end-to-end alignments before using the [multiseed heuristic], which leads to the expected behavior when combined with options such as `-L` and `-N`. This comes at the expense of speed; Default=False"/>
                        <conditional name="align_mode">
                            <param name="align_mode_selector" type="select" display="radio" label="Select between `--local` and `--end-to-end` alignment modes" help="--local and --end-to-end; see help below for detailed explanation; default=--end-to-end">
                                <option value="end-to-end" selected="True">End to End (--end-to-end)</option>
                                <option value="local">Local (--local)</option>
                            </param>
                            <when value="end-to-end">
                                <param name="score-min" type="text" value="G,20,8" label="Set a function governing the minimum alignment score needed for an alignment to be considered `valid` (i.e. good enough to report)" help="--score-min; This is a function of read length. For instance, specifying `L,0,-0.6` sets the minimum-score function `f` to `f(x) = 0 + -0.6 * x`, where `x` is the read length.  See also: [setting function options].  The default in `--end-to-end` mode is `L,-0.6,-0.6` and the default in `--local` mode is `G,20,8`"/>
                            </when>
                            <when value="local">
                                <param name="score-min" type="text" value="L,-0.6,-0.6" label="Set a function governing the minimum alignment score needed for an alignment to be considered `valid` (i.e. good enough to report)" help="--score-min; This is a function of read length. For instance, specifying `L,0,-0.6` sets the minimum-score function `f` to `f(x) = 0 + -0.6 * x`, where `x` is the read length.  See also: [setting function options].  The default in `--end-to-end` mode is `L,-0.6,-0.6` and the default in `--local` mode is `G,20,8`"/>
                            </when>
                        </conditional>
                    </when>
                    <when value="no">
                        <!-- do nothing -->
                    </when>
                </conditional>
                <conditional name="scoring_options">
                    <param name="scoring_options_selector" type="select" label="Do you want to tweak scoring options?" help="See &quot;Scoring Options&quot; section of Help below for information">
                        <option value="yes">Yes</option>
                        <option value="no" selected="true">No</option>
                    </param>
                    <when value="yes">
                        <param name="ma" type="integer" value="2" label="Set the match bonus" help="--ma;  In `--local` mode match bonus is added to the alignment score for each position where a read character aligns to a reference character and the characters match. Not used in `--end-to-end` mode; Default=2"/>
                        <param name="mp" type="text" size="10" value="6,2" label="Set the maximum (`MX`) and minimum (`MN`) mismatch penalties, both integers" help="--mp; A number less than or equal to `MX` and greater than or equal to `MN` is subtracted from the alignment score for each position where a read character aligns to a reference character, the characters do not match, and neither is an `N`.  If `--ignore-quals` is specified, the number subtracted quals `MX`. Otherwise, the number subtracted is `MN + floor( (MX-MN)(MIN(Q, 40.0)/40.0) )` where Q is the Phred quality value; Default=6,2"/>
                        <param name="np" type="integer" value="1" label="Sets penalty for positions where the read, reference, or both, contain an ambiguous character such as `N`" help="--np; Default=1"/>
                        <param name="rdg_read_open" type="integer" value="5" label="Set the read gap opening penalty" help="--rdg; this is the first component of --rdg flag - opening penalty; Default=5"/>
                        <param name="rdg_read_extend" type="integer" value="3" label="Set the read gap extension penalty" help="--rdg; this is the second component of --rdg flag - extension penalty; Default=3"/>
                        <param name="rfg_ref_open" type="integer" value="5" label="Set the reference gap opening penalty" help="--rfg; this is the first component of --rfg flag - opening penalty; Default=5"/>
                        <param name="rfg_ref_extend" type="integer" value="3" label="Set the reference gap extension penalty" help="--rfg; this is the second component of --rfg flag - extension penalty; Default=3"/>
                    </when>
                    <when value="no">
                        <!-- do nothing -->
                    </when>
                </conditional>
                <conditional name="reporting_options">
                    <param name="reporting_options_selector" type="select" label="Do you want to use -a or -k options" help="Make sure you understand implications of setting -k and -a. See &quot;Reporting Options&quot; section of Help below for information on -k and -a options">
                        <option value="no" selected="true">No, do not set</option>
                        <option value="k">Set -k option and enter -k value</option>
                        <option value="a">Set -a option</option>
                    </param>
                    <when value="no">
                        <!-- do nothing -->
                    </when>
                    <when value="-k">
                        <param name="k" type="integer" min="0" value="1" label="Searches for at most that many distinct, valid alignments for each read" help="-k; see detalied description of this option in the help section below. Note: Bowtie 2 is not designed with large values for `-k` in mind, and when aligning reads to long, repetitive genomes large `-k` can be very, very slow"/>
                    </when>
                    <when value="-a">
                        <!-- do nothing here; set -a flag on the command line-->
                    </when>
                </conditional>
                <conditional name="effort_options">
                    <param name="effort_options_selector" type="select" label="Do you want to tweak effort options?" help="See &quot;Effort Options&quot; section of Help below for information">
                        <option value="yes">Yes</option>
                        <option value="no" selected="true">No</option>
                    </param>
                    <when value="yes">
                        <param name="D" type="integer" value="15" min="0" label="Attemp that many consecutive seed extension attempts to `fail` before Bowtie 2 moves on, using the alignments found so far" help="-D; A seed extension `fails` if it does not yield a new best or a new second-best alignment.  This limit is automatically adjusted up when -k or -a are specified. Default=15"/>
                        <param name="R" type="integer" value="2" min="0" label="Set the maximum number of times Bowtie 2 will `re-seed` reads with repetitive seeds" help="When `re-seeding`, Bowtie 2 simply chooses a new set of reads (same length, same number of mismatches allowed) at different offsets and searches for more alignments.  A read is considered to have repetitive seeds if the total number of seed hits divided by the number of seeds that aligned at least once is greater than 300.  Default=2"/>
                    </when>
                    <when value="no">
                        <!-- do nothing -->
                    </when>
                </conditional>
                
                <conditional name="sam_options">
                    <param name="sam_options_selector" type="select" label="Do you want to tweak SAM/BAM Options?" help="See &quot;Output Options&quot; section of Help below for information">
                        <option value="yes">Yes</option>
                        <option value="no" selected="true">No</option>
                    </param>
                    <when value="yes">
                        <param name="no-unal" type="boolean" truevalue="--no-unal" falsevalue="" label="Suppress SAM records for reads that failed to align" help="--no-unal; Default=False"/>
                        <param name="omit-sec-seq" type="boolean" truevalue="--omit-sec-seq" falsevalue="" label="Suppress SEQ and QUAL strings for secondary alignments" help="--omit-sec-seq; Default=False"/>
                    </when>
                    <when value="no">
                        <!-- do nothing -->
                    </when>
                </conditional>
                <conditional name="other_options">
                    <param name="other_options_selector" type="select" label="Do you want to tweak Other Options?" help="See &quot;Other Options&quot; section of Help below for information">
                        <option value="yes">Yes</option>
                        <option value="no" selected="true">No</option>
                    </param>
                    <when value="yes">
                        <param name="reorder" type="boolean" truevalue="--reorder" falsevalue="" label="Guarantee that output SAM records are printed in an order corresponding to the order of the reads in the original input file" help="--reorder; Default=False"/>
                        <param name="seed" type="integer" value="0" min="0" label="Use this number as the seed for pseudo-random number generator" help="--seed; Default=0"/>
                        <param name="non-deterministic" type="boolean" truevalue="--non-deterministic" falsevalue="" label="Re-initialize the pseudo-random generator for each read using the current time" help="--non-deterministic; see Help below for explanation of this option; default=False"/>
                    </when>
                    <when value="no">
                        <!-- do nothing -->
                    </when>
                </conditional>
            </when>
        </conditional> 
  	</inputs>
	<outputs>
    	<data format="sam" name="output" label="SAM file (Input fo SamConverter Plugin)"/>
  	</outputs>
  	<help>
  
  .. class:: infomark

**Program encapsulated in Galaxy by South Green**

.. class:: infomark 

-----

==========
 Overview
==========

**Bowtie2 Overview**

Bowtie2 is an ultrafast and memory-efficient tool for aligning sequencing reads to long reference sequences. 
It is particularly good at aligning reads of about 50 up to 100s or 1,000s of characters to relatively long genomes. 
Bowtie 2 supports gapped, local, and paired-end alignment modes. 
Galaxy wrapper for Bowtie 2 outputs alignments in SAM format.
Majority of information in this page is derived from an excellent Bowtie2_ manual written by Ben Langmead.

.. _Bowtie2: http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml


**The commonly used parameters with default value setting**::

    -U    Input directory containing FASTQ text (_fastq.txt) or gzipped FASTQ (_fastq.gz) text files.
    -x    The basename of the reference genome index.
    -S    SAM alignment file that can be read by the SAMConverterPlugin of our GBS pipeline
    
Presets:                 Same as:
  For --end-to-end:
    --very-fast                 -D 5 -R 1 -N 0 -L 22 -i S,0,2.50
    --fast                      -D 10 -R 2 -N 0 -L 22 -i S,0,2.50
    --sensitive                 -D 15 -R 2 -N 0 -L 22 -i S,1,1.15 (default)
    --very-sensitive            -D 20 -R 3 -N 0 -L 20 -i S,1,0.50

  For --local:
    --very-fast-local           -D 5 -R 1 -N 0 -L 25 -i S,1,2.00
    --fast-local                -D 10 -R 2 -N 0 -L 22 -i S,1,1.75
    --sensitive-local           -D 15 -R 2 -N 0 -L 20 -i S,1,0.75 (default)
    --very-sensitive-local      -D 20 -R 3 -N 0 -L 20 -i S,1,0.50

-------
	
	</help>
    <citations>
    	<citation type="doi">10.1186/gb-2009-10-3-r25</citation>
    	<citation type="doi">10.1038/nmeth.1923</citation>
  	</citations>
</tool>
 
